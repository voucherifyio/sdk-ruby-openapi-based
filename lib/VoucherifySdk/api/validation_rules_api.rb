=begin
#Voucherify API

#Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.

The version of the OpenAPI document: v2018-08-01
Contact: support@voucherify.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module VoucherifySdk
  class ValidationRulesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create Validation Rules
    # Create validation rules.
    # @param [Hash] opts the optional parameters
    # @option opts [ValidationRulesCreateRequestBody] :validation_rules_create_request_body Specify the validation rules parameters.
    # @return [ValidationRulesCreateResponseBody]
    def create_validation_rules(opts = {})
      data, _status_code, _headers = create_validation_rules_with_http_info(opts)
      data
    end

    # Create Validation Rules
    # Create validation rules.
    # @param [Hash] opts the optional parameters
    # @option opts [ValidationRulesCreateRequestBody] :validation_rules_create_request_body Specify the validation rules parameters.
    # @return [Array<(ValidationRulesCreateResponseBody, Integer, Hash)>] ValidationRulesCreateResponseBody data, response status code and response headers
    private def create_validation_rules_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.create_validation_rules ...'
      end
      # resource path
      local_var_path = '/v1/validation-rules'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'validation_rules_create_request_body'])

      # return_type
      return_type = opts[:debug_return_type] || 'ValidationRulesCreateResponseBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.create_validation_rules",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#create_validation_rules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete Validation Rule Assignment
    # This method deletes a validation rule assignment.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param assignment_id [String] A unique validation rule assignment ID.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_validation_rule_assignment(validation_rule_id, assignment_id, opts = {})
      delete_validation_rule_assignment_with_http_info(validation_rule_id, assignment_id, opts)
      nil
    end

    # Delete Validation Rule Assignment
    # This method deletes a validation rule assignment.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param assignment_id [String] A unique validation rule assignment ID.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    private def delete_validation_rule_assignment_with_http_info(validation_rule_id, assignment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.delete_validation_rule_assignment ...'
      end
      # verify the required parameter 'validation_rule_id' is set
      if @api_client.config.client_side_validation && validation_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'validation_rule_id' when calling ValidationRulesApi.delete_validation_rule_assignment"
      end
      # verify the required parameter 'assignment_id' is set
      if @api_client.config.client_side_validation && assignment_id.nil?
        fail ArgumentError, "Missing the required parameter 'assignment_id' when calling ValidationRulesApi.delete_validation_rule_assignment"
      end
      # resource path
      local_var_path = '/v1/validation-rules/{validationRuleId}/assignments/{assignmentId}'.sub('{' + 'validationRuleId' + '}', CGI.escape(validation_rule_id.to_s)).sub('{' + 'assignmentId' + '}', CGI.escape(assignment_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.delete_validation_rule_assignment",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#delete_validation_rule_assignment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete Validation Rule
    # This method deletes a validation rule.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_validation_rules(validation_rule_id, opts = {})
      delete_validation_rules_with_http_info(validation_rule_id, opts)
      nil
    end

    # Delete Validation Rule
    # This method deletes a validation rule.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    private def delete_validation_rules_with_http_info(validation_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.delete_validation_rules ...'
      end
      # verify the required parameter 'validation_rule_id' is set
      if @api_client.config.client_side_validation && validation_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'validation_rule_id' when calling ValidationRulesApi.delete_validation_rules"
      end
      # resource path
      local_var_path = '/v1/validation-rules/{validationRuleId}'.sub('{' + 'validationRuleId' + '}', CGI.escape(validation_rule_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.delete_validation_rules",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#delete_validation_rules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Validation Rule
    # Retrieve the details of a validation rule.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @return [ValidationRulesGetResponseBody]
    def get_validation_rule(validation_rule_id, opts = {})
      data, _status_code, _headers = get_validation_rule_with_http_info(validation_rule_id, opts)
      data
    end

    # Get Validation Rule
    # Retrieve the details of a validation rule.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ValidationRulesGetResponseBody, Integer, Hash)>] ValidationRulesGetResponseBody data, response status code and response headers
    private def get_validation_rule_with_http_info(validation_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.get_validation_rule ...'
      end
      # verify the required parameter 'validation_rule_id' is set
      if @api_client.config.client_side_validation && validation_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'validation_rule_id' when calling ValidationRulesApi.get_validation_rule"
      end
      # resource path
      local_var_path = '/v1/validation-rules/{validationRuleId}'.sub('{' + 'validationRuleId' + '}', CGI.escape(validation_rule_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ValidationRulesGetResponseBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.get_validation_rule",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#get_validation_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Validation Rule Assignments
    # Retrieve validation rule assignments for a specific validation rule.
    # @param validation_rule_id [String] Unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
    # @option opts [Integer] :page Which page of results to return.
    # @option opts [ParameterOrderListValidationRuleAssignments] :order This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
    # @return [ValidationRulesAssignmentsListResponseBody]
    def list_validation_rule_assignments(validation_rule_id, opts = {})
      data, _status_code, _headers = list_validation_rule_assignments_with_http_info(validation_rule_id, opts)
      data
    end

    # List Validation Rule Assignments
    # Retrieve validation rule assignments for a specific validation rule.
    # @param validation_rule_id [String] Unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
    # @option opts [Integer] :page Which page of results to return.
    # @option opts [ParameterOrderListValidationRuleAssignments] :order This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
    # @return [Array<(ValidationRulesAssignmentsListResponseBody, Integer, Hash)>] ValidationRulesAssignmentsListResponseBody data, response status code and response headers
    private def list_validation_rule_assignments_with_http_info(validation_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.list_validation_rule_assignments ...'
      end
      # verify the required parameter 'validation_rule_id' is set
      if @api_client.config.client_side_validation && validation_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'validation_rule_id' when calling ValidationRulesApi.list_validation_rule_assignments"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ValidationRulesApi.list_validation_rule_assignments, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ValidationRulesApi.list_validation_rule_assignments, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page'].nil? && opts[:'page'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page"]" when calling ValidationRulesApi.list_validation_rule_assignments, must be smaller than or equal to 100.'
      end

      # resource path
      local_var_path = '/v1/validation-rules/{validationRuleId}/assignments'.sub('{' + 'validationRuleId' + '}', CGI.escape(validation_rule_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'order'] = opts[:'order'] if !opts[:'order'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ValidationRulesAssignmentsListResponseBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.list_validation_rule_assignments",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#list_validation_rule_assignments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Validation Rules
    # Retrieve validation rules.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
    # @option opts [Integer] :page Which page of results to return.
    # @option opts [ParameterOrderListValidationRules] :order This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
    # @option opts [Time] :start_date Timestamp representing the date and time which results must start on. Represented in ISO 8601 format.
    # @option opts [Time] :end_date Timestamp representing the date and time which results must end on. Represented in ISO 8601 format.
    # @return [ValidationRulesListResponseBody]
    def list_validation_rules(opts = {})
      data, _status_code, _headers = list_validation_rules_with_http_info(opts)
      data
    end

    # List Validation Rules
    # Retrieve validation rules.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
    # @option opts [Integer] :page Which page of results to return.
    # @option opts [ParameterOrderListValidationRules] :order This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
    # @option opts [Time] :start_date Timestamp representing the date and time which results must start on. Represented in ISO 8601 format.
    # @option opts [Time] :end_date Timestamp representing the date and time which results must end on. Represented in ISO 8601 format.
    # @return [Array<(ValidationRulesListResponseBody, Integer, Hash)>] ValidationRulesListResponseBody data, response status code and response headers
    private def list_validation_rules_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.list_validation_rules ...'
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ValidationRulesApi.list_validation_rules, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ValidationRulesApi.list_validation_rules, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page'].nil? && opts[:'page'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page"]" when calling ValidationRulesApi.list_validation_rules, must be smaller than or equal to 100.'
      end

      # resource path
      local_var_path = '/v1/validation-rules'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'order'] = opts[:'order'] if !opts[:'order'].nil?
      query_params[:'start_date'] = opts[:'start_date'] if !opts[:'start_date'].nil?
      query_params[:'end_date'] = opts[:'end_date'] if !opts[:'end_date'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ValidationRulesListResponseBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.list_validation_rules",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#list_validation_rules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Validation Rules' Assignment(s)
    # List all validation rules' assignments or filter the results using the related object ID or the validation rule ID query parameters.  # How to retrieve specific validation rule assignments(s) ## Related object ID To find an assignment for a particular resource, you can use the ID of the object to which the validation rule was assigned. This could be, for example, an ID of a: voucher, campaign, distribution, reward assignment, earning rule, promotion tier.   ```curl curl -X GET \\   -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\   -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\" \\   -H \"Content-Type: application/json\" \\   https://api.voucherify.io/v1/validation-rules-assignments?related_object_id=promo_kJliy076IuJYtuYWSHE9fSuT ``` ```json {     \"object\": \"list\",     \"data_ref\": \"data\",     \"data\": [         {             \"id\": \"asgm_tZaqxeO8gP4q91jG\",             \"rule_id\": \"val_WB6ETAiFztw5\",             \"related_object_id\": \"promo_kJliy076IuJYtuYWSHE9fSuT\",             \"related_object_type\": \"promotion_tier\",             \"created_at\": \"2022-08-10T10:30:39.986Z\",             \"object\": \"validation_rules_assignment\"         }     ],     \"total\": 1 } ``` ## Validation rule ID You can use the validation rule ID to find assignment(s) for a specific validation rule. ```curl curl -X GET \\   -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\   -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\" \\   -H \"Content-Type: application/json\" \\   https://api.voucherify.io/v1/validation-rules-assignments?rule=val_ZEZmA9oit8aU ``` ```json {     \"object\": \"list\",     \"data_ref\": \"data\",     \"data\": [         {             \"id\": \"asgm_vef0G6d9Al0rABxq\",             \"rule_id\": \"val_ZEZmA9oit8aU\",             \"related_object_id\": \"camp_rRsfatlwN7unSeUIJDCYedal\",             \"related_object_type\": \"campaign\",             \"created_at\": \"2022-06-29T11:43:52.953Z\",             \"object\": \"validation_rules_assignment\"         },         {             \"id\": \"asgm_sFV4wEFvldwIvgfb\",             \"rule_id\": \"val_ZEZmA9oit8aU\",             \"related_object_id\": \"distr_9QKI02wqgjWyvZXeQkFEPmkkYe\",             \"related_object_type\": \"distribution\",             \"created_at\": \"2022-06-29T11:41:07.680Z\",             \"object\": \"validation_rules_assignment\"         },         {             \"id\": \"asgm_69Qifyv6UZynFIIQ\",             \"rule_id\": \"val_ZEZmA9oit8aU\",             \"related_object_id\": \"promo_g83qUzYZpfX0OMAFOVoQuOYG\",             \"related_object_type\": \"promotion_tier\",             \"created_at\": \"2022-06-29T11:29:41.906Z\",             \"object\": \"validation_rules_assignment\"         }     ],     \"total\": 3 } ``` 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :related_object_id The resource ID to which the validation rule was assigned; this could be, for example, a resource ID of a voucher, campaign, earning rule, reward assignment, promotion tier, or distribution.
    # @option opts [String] :rule Validation rule ID.
    # @option opts [Integer] :page Which page of results to return.
    # @option opts [Integer] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
    # @option opts [String] :order Sorts the results using one of the filtering options: &#x60;-created_at&#x60;, &#x60;created_at&#x60;, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
    # @return [ValidationRulesAssignmentsListResponseBody]
    def list_validation_rules_assignments(opts = {})
      data, _status_code, _headers = list_validation_rules_assignments_with_http_info(opts)
      data
    end

    # List Validation Rules&#39; Assignment(s)
    # List all validation rules&#39; assignments or filter the results using the related object ID or the validation rule ID query parameters.  # How to retrieve specific validation rule assignments(s) ## Related object ID To find an assignment for a particular resource, you can use the ID of the object to which the validation rule was assigned. This could be, for example, an ID of a: voucher, campaign, distribution, reward assignment, earning rule, promotion tier.   &#x60;&#x60;&#x60;curl curl -X GET \\   -H \&quot;X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\&quot; \\   -H \&quot;X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\&quot; \\   -H \&quot;Content-Type: application/json\&quot; \\   https://api.voucherify.io/v1/validation-rules-assignments?related_object_id&#x3D;promo_kJliy076IuJYtuYWSHE9fSuT &#x60;&#x60;&#x60; &#x60;&#x60;&#x60;json {     \&quot;object\&quot;: \&quot;list\&quot;,     \&quot;data_ref\&quot;: \&quot;data\&quot;,     \&quot;data\&quot;: [         {             \&quot;id\&quot;: \&quot;asgm_tZaqxeO8gP4q91jG\&quot;,             \&quot;rule_id\&quot;: \&quot;val_WB6ETAiFztw5\&quot;,             \&quot;related_object_id\&quot;: \&quot;promo_kJliy076IuJYtuYWSHE9fSuT\&quot;,             \&quot;related_object_type\&quot;: \&quot;promotion_tier\&quot;,             \&quot;created_at\&quot;: \&quot;2022-08-10T10:30:39.986Z\&quot;,             \&quot;object\&quot;: \&quot;validation_rules_assignment\&quot;         }     ],     \&quot;total\&quot;: 1 } &#x60;&#x60;&#x60; ## Validation rule ID You can use the validation rule ID to find assignment(s) for a specific validation rule. &#x60;&#x60;&#x60;curl curl -X GET \\   -H \&quot;X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\&quot; \\   -H \&quot;X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\&quot; \\   -H \&quot;Content-Type: application/json\&quot; \\   https://api.voucherify.io/v1/validation-rules-assignments?rule&#x3D;val_ZEZmA9oit8aU &#x60;&#x60;&#x60; &#x60;&#x60;&#x60;json {     \&quot;object\&quot;: \&quot;list\&quot;,     \&quot;data_ref\&quot;: \&quot;data\&quot;,     \&quot;data\&quot;: [         {             \&quot;id\&quot;: \&quot;asgm_vef0G6d9Al0rABxq\&quot;,             \&quot;rule_id\&quot;: \&quot;val_ZEZmA9oit8aU\&quot;,             \&quot;related_object_id\&quot;: \&quot;camp_rRsfatlwN7unSeUIJDCYedal\&quot;,             \&quot;related_object_type\&quot;: \&quot;campaign\&quot;,             \&quot;created_at\&quot;: \&quot;2022-06-29T11:43:52.953Z\&quot;,             \&quot;object\&quot;: \&quot;validation_rules_assignment\&quot;         },         {             \&quot;id\&quot;: \&quot;asgm_sFV4wEFvldwIvgfb\&quot;,             \&quot;rule_id\&quot;: \&quot;val_ZEZmA9oit8aU\&quot;,             \&quot;related_object_id\&quot;: \&quot;distr_9QKI02wqgjWyvZXeQkFEPmkkYe\&quot;,             \&quot;related_object_type\&quot;: \&quot;distribution\&quot;,             \&quot;created_at\&quot;: \&quot;2022-06-29T11:41:07.680Z\&quot;,             \&quot;object\&quot;: \&quot;validation_rules_assignment\&quot;         },         {             \&quot;id\&quot;: \&quot;asgm_69Qifyv6UZynFIIQ\&quot;,             \&quot;rule_id\&quot;: \&quot;val_ZEZmA9oit8aU\&quot;,             \&quot;related_object_id\&quot;: \&quot;promo_g83qUzYZpfX0OMAFOVoQuOYG\&quot;,             \&quot;related_object_type\&quot;: \&quot;promotion_tier\&quot;,             \&quot;created_at\&quot;: \&quot;2022-06-29T11:29:41.906Z\&quot;,             \&quot;object\&quot;: \&quot;validation_rules_assignment\&quot;         }     ],     \&quot;total\&quot;: 3 } &#x60;&#x60;&#x60; 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :related_object_id The resource ID to which the validation rule was assigned; this could be, for example, a resource ID of a voucher, campaign, earning rule, reward assignment, promotion tier, or distribution.
    # @option opts [String] :rule Validation rule ID.
    # @option opts [Integer] :page Which page of results to return.
    # @option opts [Integer] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
    # @option opts [String] :order Sorts the results using one of the filtering options: &#x60;-created_at&#x60;, &#x60;created_at&#x60;, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
    # @return [Array<(ValidationRulesAssignmentsListResponseBody, Integer, Hash)>] ValidationRulesAssignmentsListResponseBody data, response status code and response headers
    private def list_validation_rules_assignments_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.list_validation_rules_assignments ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page'].nil? && opts[:'page'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page"]" when calling ValidationRulesApi.list_validation_rules_assignments, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ValidationRulesApi.list_validation_rules_assignments, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ValidationRulesApi.list_validation_rules_assignments, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v1/validation-rules-assignments'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'related_object_id'] = opts[:'related_object_id'] if !opts[:'related_object_id'].nil?
      query_params[:'rule'] = opts[:'rule'] if !opts[:'rule'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'order'] = opts[:'order'] if !opts[:'order'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ValidationRulesAssignmentsListResponseBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.list_validation_rules_assignments",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#list_validation_rules_assignments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Validation Rule
    # Update validation rule parameters.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @option opts [ValidationRulesUpdateRequestBody] :validation_rules_update_request_body Specify the parameters to be updated.
    # @return [ValidationRulesUpdateResponseBody]
    def update_validation_rule(validation_rule_id, opts = {})
      data, _status_code, _headers = update_validation_rule_with_http_info(validation_rule_id, opts)
      data
    end

    # Update Validation Rule
    # Update validation rule parameters.
    # @param validation_rule_id [String] A unique validation rule ID.
    # @param [Hash] opts the optional parameters
    # @option opts [ValidationRulesUpdateRequestBody] :validation_rules_update_request_body Specify the parameters to be updated.
    # @return [Array<(ValidationRulesUpdateResponseBody, Integer, Hash)>] ValidationRulesUpdateResponseBody data, response status code and response headers
    private def update_validation_rule_with_http_info(validation_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ValidationRulesApi.update_validation_rule ...'
      end
      # verify the required parameter 'validation_rule_id' is set
      if @api_client.config.client_side_validation && validation_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'validation_rule_id' when calling ValidationRulesApi.update_validation_rule"
      end
      # resource path
      local_var_path = '/v1/validation-rules/{validationRuleId}'.sub('{' + 'validationRuleId' + '}', CGI.escape(validation_rule_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'validation_rules_update_request_body'])

      # return_type
      return_type = opts[:debug_return_type] || 'ValidationRulesUpdateResponseBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-App-Id', 'X-App-Token']

      new_options = opts.merge(
        :operation => :"ValidationRulesApi.update_validation_rule",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ValidationRulesApi#update_validation_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
